# Generated by Django 3.0.7 on 2020-11-11 01:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.db import connections


def _create_pk():
    cursor = connections['default'].cursor()
    sql = """
        ALTER TABLE m_geo_datas
        ADD CONSTRAINT m_geo_datas_pkey
        PRIMARY KEY (geo_id)
    """
    cursor.execute(sql)


def _check_constraint(apps, schema_editor):
    cursor = connections['default'].cursor()
    sql = """
        SELECT c.column_name, c.data_type
        FROM information_schema.table_constraints tc
        JOIN information_schema.constraint_column_usage AS ccu USING (constraint_schema, constraint_name)
        JOIN information_schema.columns AS c ON c.table_schema = tc.constraint_schema
        AND tc.table_name = c.table_name AND ccu.column_name = c.column_name
        WHERE constraint_type = 'PRIMARY KEY' and tc.table_name = 'm_geo_datas';
    """
    cursor.execute(sql)
    value = cursor.fetchone()
    if not value:
        _create_pk


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('backend_inspire', '0002_lcodelistconfigs_lcodelists_ldatatypeconfigs_ldatatypes_lfeatureconfigs_lproperties_lvaluetypes_mdat'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RunPython(_check_constraint),

        migrations.CreateModel(
            name='MetaData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('org_name', models.CharField(max_length=50, verbose_name='Гүйцэтгэгч байгууллага')),
                ('customer_org', models.CharField(max_length=50, verbose_name='Захиалагч байгууллага')),
                ('distributor_org', models.CharField(max_length=50, verbose_name='Түгээгч байгууллага')),
                ('owner_org', models.CharField(max_length=50, verbose_name='Гүйцэтгэгч байгууллага')),
                ('keywords', models.CharField(max_length=500, verbose_name='Ямар өгөгдөл дээр ажилласан')),
                ('category', models.CharField(choices=[('1', 'Агаар сансрын зураг')], max_length=2, verbose_name='Ямар арга ашигласан')),
                ('status', models.CharField(choices=[('1', 'Completed')], max_length=2)),
                ('language', models.CharField(max_length=50, null=True, verbose_name='Ямар хэл дээр мэдээлэл гаргаж байгаа')),
                ('summary', models.CharField(max_length=2000, null=True, verbose_name='Дэлгэрэнгүй мэдээлэл')),
                ('title', models.CharField(max_length=2000, verbose_name='Гарчиг')),
                ('uuid', models.CharField(max_length=50, null=True)),
                ('schema', models.CharField(max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_name', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'meta_data',
            },
        ),
        migrations.CreateModel(
            name='MetaDataGeom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geo_data_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backend_inspire.MGeoDatas')),
                ('meta_data_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='govorg_backend_meta_data.MetaData')),
            ],
            options={
                'db_table': 'meta_data_geom',
            },
        ),
        migrations.AddField(
            model_name='metadata',
            name='geo_datas',
            field=models.ManyToManyField(through='govorg_backend_meta_data.MetaDataGeom', to='backend_inspire.MGeoDatas', verbose_name='Геометр өгөгдлүүд'),
        ),
        migrations.AddField(
            model_name='metadata',
            name='updated_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='updated_name', to=settings.AUTH_USER_MODEL),
        ),
    ]
