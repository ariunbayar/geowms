# Generated by Django 3.0.7 on 2021-03-24 06:32

from django.db import migrations
import json


def _has_value(Model, object):
    has_value = False
    config_qs = Model.objects
    config_qs = config_qs.filter(name=object['name'], value__isnull=False)
    if config_qs:
        has_value = True

    return has_value


def create_qpay_config(apps, schema_editor):

    # Config = apps.get_model('backend_config', 'Config')

    # value = {
    #     "id": "CUST_001",
    #     "register_no": "ddf",
    #     "name": "Central brnach",
    #     "email": "info@info.mn",
    #     "phone_number": "99888899",
    #     "note": "davaa"
    # }

    # value = json.dumps(value)
    # obj = dict()
    # obj['value'] = value

    # has_value = _has_value(Config, obj)
    # if not has_value:
    #     Config.objects.create(**obj)

    Config = apps.get_model('backend_config', 'Config')

    values = (
        ('id', 'CUST_001'),
        ('register_no', 'ddf'),
        ('name', 'Central brnach'),
        ('email', 'info@info.mn'),
        ('phone_number', '99888899'),
        ('note', 'davaa'),
    )

    for name, value in values:
        Config.objects.create(name=name, value=value)

class Migration(migrations.Migration):

    dependencies = [
        ('backend_config', '0014_auto_20210312_1725'),
    ]

    operations = [
        migrations.RunPython(create_qpay_config),
    ]
