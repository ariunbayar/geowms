# Generated by Django 3.0.7 on 2021-06-16 04:08

from django.db import migrations

def get_feature_count_from_mgeo(apps, schema_editor):
    wmts_configs = apps.get_model('backend_geoserver', 'WmtsCacheConfig')
    m_geo_datas = apps.get_model('backend_inspire', 'MGeoDatas')
    l_features = apps.get_model('backend_inspire', 'LFeatures')
    l_features_ids = list(l_features.objects.values_list('feature_id', flat=True))
    for feature_id in l_features_ids:
        feature = m_geo_datas.objects.filter(feature_id=feature_id)
        wmts_configs.objects.update_or_create(
            feature_id=feature_id,
            defaults={
                'feature_count': feature.count()
            }
        )

class Migration(migrations.Migration):

    dependencies = [
        ('backend_geoserver', '0008_auto_20210630_1145'),
    ]

    operations = [
         migrations.RunPython(get_feature_count_from_mgeo),
    ]
